/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 sedanSports.glb --transform
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { CuboidCollider, CylinderCollider, interactionGroups, RigidBody, useRevoluteJoint } from '@react-three/rapier'
import { useFrame } from '@react-three/fiber'

export default function Car(props) {
	const { nodes, materials } = useGLTF('./assets/models/sedanSports-transformed.glb')

	const bodyA = useRef()
	const wheelsFront = useRef()
	const wheelsRear = useRef()

	const jointWheel1 = useRevoluteJoint(
		bodyA,
		wheelsFront,
		[
			[0, 0, 0],
			[0, 0, 0],
			[0, 1, 0],
		]
	)

	const jointWheel2 = useRevoluteJoint(
		bodyA,
		wheelsRear,
		[
			[0, 0, 0],
			[0, 0, 0],
			[0, .1, 0],
		]
	)
	
	useFrame(() => {
		if (wheelsFront.current) {
			wheelsFront.current.applyTorqueImpulse({ x: 0, y: 0, z: 0 }, true)
		}
		// if (jointWheel1.current) {
		// 	jointWheel1.current.configureMotorVelocity(10, .2)
		// }
	}, [])



	// const jointWheel3 = useRevoluteJoint(
	// 	bodyA,
	// 	wheel3,
	// 	[
	// 		[0, 0, 0],
	// 		[0, 0, 0],
	// 		[0, .1, 0],
	// 	]
	// )

	// const jointWheel4 = useRevoluteJoint(
	// 	bodyA,
	// 	wheel4,
	// 	[
	// 		[0, 0, 0],
	// 		[0, 0, 0],
	// 		[0, .1, 0],
	// 	]
	// )

	return (
	// <RigidBody position={[0, 1, 0]} scale={ .1 } colliders={ false }>
	<group {...props} dispose={null} position={[0, .5, 0]}>
		<RigidBody ref={bodyA} colliders={false}>
			<CuboidCollider args={[.5, .1, 1]} position={[0,1,0]} collisionGroups={interactionGroups(0,[1])} />
			<group position={[0, 0.2, 0]}>
				<mesh geometry={nodes.Mesh_body.geometry} material={materials.plastic} />
				<mesh geometry={nodes.Mesh_body_1.geometry} material={materials.carTire} />
				<mesh geometry={nodes.Mesh_body_2.geometry} material={materials.paintRed} />
				<mesh geometry={nodes.Mesh_body_3.geometry} material={materials._defaultMat} />
				<mesh geometry={nodes.Mesh_body_4.geometry} material={materials.window} />
				<mesh geometry={nodes.Mesh_body_5.geometry} material={materials.lightBack} />
				<mesh geometry={nodes.Mesh_body_6.geometry} material={materials.lightFront} />
				<group position={[0, 0.4, 1.07]}>
					<mesh geometry={nodes.Mesh_spoiler.geometry} material={materials.carTire} />
					<mesh geometry={nodes.Mesh_spoiler_1.geometry} material={materials.paintRed} />
				</group>
			</group>
		</RigidBody>
		<RigidBody ref={wheelsRear} collisionGroups={interactionGroups(0,[1])}>
			<group position={[-.7, 0.3, 0.66]}>
				<mesh geometry={nodes.Mesh_wheel_frontLeft.geometry} material={materials.carTire} />
				<mesh geometry={nodes.Mesh_wheel_frontLeft_1.geometry} material={materials.wheelInside} />
				<mesh geometry={nodes.Mesh_wheel_frontLeft_2.geometry} material={materials._defaultMat} />
			</group>
			<group position={[0.3, 0.3, 0.66]}>
				<mesh geometry={nodes.Mesh_wheel_frontLeft.geometry} material={materials.carTire} />
				<mesh geometry={nodes.Mesh_wheel_frontLeft_1.geometry} material={materials.wheelInside} />
				<mesh geometry={nodes.Mesh_wheel_frontLeft_2.geometry} material={materials._defaultMat} />
			</group>
		{/* </RigidBody>
		<RigidBody ref={wheelRR} collisionGroups={interactionGroups(0,[1])}> */}
		</RigidBody>
		<RigidBody ref={wheelsFront} collisionGroups={interactionGroups(0,[1])}>
			<group position={[-0.7, 0.3, -0.66]}>
				<mesh geometry={nodes.Mesh_wheel_frontLeft.geometry} material={materials.carTire} />
				<mesh geometry={nodes.Mesh_wheel_frontLeft_1.geometry} material={materials.wheelInside} />
				<mesh geometry={nodes.Mesh_wheel_frontLeft_2.geometry} material={materials._defaultMat} />
			</group>
			<group position={[0.3, 0.3, -0.66]}>
				<mesh geometry={nodes.Mesh_wheel_frontLeft.geometry} material={materials.carTire} />
				<mesh geometry={nodes.Mesh_wheel_frontLeft_1.geometry} material={materials.wheelInside} />
				<mesh geometry={nodes.Mesh_wheel_frontLeft_2.geometry} material={materials._defaultMat} />
			</group>
		</RigidBody>
		{/* <RigidBody ref={wheelFR} collisionGroups={interactionGroups(0,[1])}>
		</RigidBody> */}

	</group>
	// </RigidBody>
	)
}

// useGLTF.preload('/sedanSports-transformed.glb')
