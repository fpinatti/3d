/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 tree_bench.gltf --transform
*/

import React, { useEffect, useRef } from 'react'
import { Float, MeshWobbleMaterial, useGLTF, useHelper, useMatcapTexture, useTexture } from '@react-three/drei'
import { CuboidCollider, RigidBody, useFixedJoint, useSphericalJoint } from '@react-three/rapier'
import { PointLightHelper } from 'three'

export default function Tree(props) {

	const bodyA = useRef()
	const bodyB = useRef()
	const lampLight = useRef()

	// useHelper(lampLight, PointLightHelper, .4, 'pink')

	const joint = useSphericalJoint(bodyA, bodyB, [
		[0, 0, 0],
		[0, -1, 0],
	])

	const impulseLamp = (impulseX, impulseY) => {
		bodyB.current.applyImpulse({
			x: impulseX,
			y: impulseY,
			z: 0,
		}, true)
	}

	const pointerLamp = (evt) => {
		impulseLamp(evt.movementX * .2, evt.movementY * .2)
	}

	useEffect(() => {
		impulseLamp(1, 1)
	}, [])


	const { nodes, materials } = useGLTF('./assets/models/tree_bench-transformed.glb')
	// const grass = useMatcapTexture('3B6E10_E3F2C3_88AC2E_99CE51', 64)
	
	// const texture = useTexture('./assets/textures/baked.jpg')
	// texture.flipY = false

	//   materials.floor = texture
	return (
		<group {...props} dispose={null}>
			<mesh geometry={nodes.Cube005.geometry} material={materials.leafs} castShadow position={[-0.38, 4.25, -2.02]} rotation={[0, Math.PI / 2, 0]} />
			<mesh geometry={nodes.trunk.geometry} material={materials.wood} castShadow position={[-0.62, -0.02, -0.7]} rotation={[0, Math.PI / 2, 0]}>
				<MeshWobbleMaterial
					color={ '#2f2020' }
					factor={ 1 }
					speed={ 1.2 }
				/>
			</mesh>
			<mesh geometry={nodes.ground.geometry} material={materials.ground} receiveShadow position={[-0.82, -0.96, -0.75]} />
			<mesh geometry={nodes.floor.geometry} material={materials.grass} receiveShadow position={[-0.82, -0.96, -0.75]}>
				{/* <meshMatcapMaterial matcap={ grass } /> */}
			</mesh>
			<mesh geometry={nodes.Cube016.geometry} receiveShadow castShadow material={materials['light wood']} position={[-0.14, 0.25, 0.33]} rotation={[0, Math.PI / 2, 0]} />
			<mesh geometry={nodes.Cylinder.geometry} material={materials.metal} position={[-1.37, 0.76, 0.11]} rotation={[-Math.PI / 2, 0.42, Math.PI / 2]} />
			<mesh geometry={nodes.Cylinder001.geometry} material={materials.metal} position={[-1.37, 0.58, 0.11]} rotation={[-Math.PI / 2, 1.04, Math.PI / 2]} />
			<mesh geometry={nodes.Cylinder002.geometry} material={materials.metal} position={[-1.37, 0.38, 0.11]} rotation={[Math.PI / 2, 0.68, -Math.PI / 2]} />
			<mesh geometry={nodes.Cylinder003.geometry} material={materials.metal} position={[0.03, 0.76, 0.11]} rotation={[0, Math.PI / 2, 0]} />
			<mesh geometry={nodes.Cylinder004.geometry} material={materials.metal} position={[0.03, 0.58, 0.11]} rotation={[-Math.PI / 2, 0.34, Math.PI / 2]} />
			<mesh geometry={nodes.Cylinder005.geometry} material={materials.metal} position={[0.03, 0.38, 0.11]} rotation={[Math.PI / 2, -1.09, -Math.PI / 2]} />
			<mesh geometry={nodes.Cube017.geometry} material={materials.wood} receiveShadow castShadow position={[0.93, 0.13, 2.18]} rotation={[0.61, 0.38, -0.81]} />
			<mesh geometry={nodes.Cube018.geometry} material={materials.wood} receiveShadow castShadow position={[0.63, 0.15, 2.55]} rotation={[-0.13, -0.83, -0.68]} />
			<mesh geometry={nodes.Cube019.geometry} material={materials.wood} receiveShadow castShadow position={[0.37, 0.15, 2.26]} rotation={[-0.07, 0.14, 0.48]} />
			<RigidBody
				ref={ bodyA }
				type='fixed'
				position={[-4.11, 8.5, 2.1]}
			>
				<mesh visible={ false }>
					<boxGeometry args={[.3, .3, .3]}  />
				</mesh>
			</RigidBody>
			<RigidBody
				ref={ bodyB }
				position={[-4.1, 2.73, 2.09]}
				colliders={ false }
			>
				<group
					onPointerEnter={ pointerLamp }
					visible={ true }
					position={[4.1, -9, -2.09]}
				>
					{/* <mesh position={[0, -5, 0]}>
						<boxGeometry />
					</mesh> */}
					<pointLight
						ref={ lampLight }
						position={[-4, 3, 2.1]}
						color='grey'
						decay={2}
						intensity={ 120 }
						distance={ 3 }
					/>
					<mesh geometry={nodes.Cylinder006.geometry} material={materials.rope} position={[-4.11, 3.87, 2.1]} castShadow />	
					<mesh geometry={nodes.Cube022.geometry} material={materials.metal} position={[-4.1, 2.73, 2.09]} castShadow />
					<mesh geometry={nodes.Cube023.geometry} material={materials.light} position={[-4.1, 2.73, 2.09]} castShadow />
					<mesh geometry={nodes.Torus.geometry} material={materials.metal} castShadow position={[-4.11, 3.85, 2.09]} rotation={[-Math.PI / 2, -Math.PI / 2, 0]} />
				</group>
				<CuboidCollider
					args={[.5, .8, .7]}
					position={[0, -6, 0]}
					mass={ 10 }
				/>
			</RigidBody>
			<Float>
				<mesh geometry={nodes.Cube020.geometry} material={materials.cloud} position={[-4.42, 4.7, -4.18]} />
			</Float>
			<Float>
				<mesh geometry={nodes.Cube021.geometry} material={materials.cloud} position={[3.31, 2.54, -5.83]} />
			</Float>
			<mesh geometry={nodes.rock.geometry} material={materials.rock} position={[-5.64, -1.25, 3.96]} />
			<mesh geometry={nodes.rock001.geometry} castShadow material={materials.rock} position={[4.49, -0.87, 3.75]} rotation={[1.22, -0.65, -0.91]} />
			<mesh geometry={nodes.rock002.geometry} castShadow material={materials.rock} position={[-2.39, -0.83, 6.12]} rotation={[1.81, 0, 0]} />
			<mesh geometry={nodes.rock003.geometry} castShadow material={materials.rock} position={[-1.22, 0.21, 3.96]} />
			<mesh geometry={nodes.rock004.geometry} castShadow material={materials.rock} position={[-2.53, 0.12, 4.5]} />
			<mesh geometry={nodes.rock005.geometry} castShadow material={materials.rock} position={[-3.9, 0.14, -2.14]} />
			<mesh geometry={nodes.rock006.geometry} castShadow material={materials.rock} position={[4.76, 0.25, -2.54]} />
			<mesh geometry={nodes.rock007.geometry} castShadow material={materials.rock} position={[3.84, 0.12, -3.15]} rotation={[-0.14, 0.72, 0.39]} />
			<mesh geometry={nodes.rock008.geometry} castShadow material={materials.rock} position={[4.06, 0.18, -2.02]} rotation={[-0.13, -0.65, -0.35]} />
			<mesh geometry={nodes.rock009.geometry} castShadow material={materials.rock} position={[2.42, -2.05, 4.96]} rotation={[1.32, -0.76, -0.95]} />
			<mesh geometry={nodes.rock010.geometry} castShadow material={materials.rock} position={[5.95, -1.72, -1.11]} rotation={[0.16, -0.24, -1.94]} />
			<mesh geometry={nodes.rock011.geometry} castShadow material={materials.rock} position={[0.31, -2.47, 5.53]} rotation={[1.98, -0.72, 0]} />
			<mesh geometry={nodes.rock012.geometry} castShadow material={materials.rock} position={[1.65, -1.18, -7.08]} rotation={[-1.67, 0.41, -0.37]} />
			<mesh geometry={nodes.rock013.geometry} castShadow material={materials.rock} position={[3.87, -1.06, -6.26]} rotation={[1.19, -0.04, -2.14]} />
			<mesh geometry={nodes.rock014.geometry} castShadow material={materials.rock} position={[-3.65, -1.2, -6.94]} rotation={[-2.52, 1.07, 0.76]} />
			<mesh geometry={nodes.rock015.geometry} castShadow material={materials.rock} position={[-1.86, -2.33, -7.12]} rotation={[0.91, -0.61, 2.75]} />
			<mesh geometry={nodes.rock016.geometry} castShadow material={materials.rock} position={[-6.68, -1.06, -4.23]} rotation={[0.82, -0.18, 2.11]} />
			<mesh geometry={nodes.rock017.geometry} castShadow material={materials.rock} position={[-7.11, -2.24, 0.32]} rotation={[-2.33, -0.41, 1.41]} />
		</group>
	)
}

// useTexture.preload('./assets/textures/baked.jpg')
// useGLTF.preload('./assets/models/tree_bench-transformed.glb')
